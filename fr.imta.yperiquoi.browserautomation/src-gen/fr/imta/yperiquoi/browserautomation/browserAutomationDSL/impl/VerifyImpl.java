/**
 * generated by Xtext 2.32.0
 */
package fr.imta.yperiquoi.browserautomation.browserAutomationDSL.impl;

import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.BrowserAutomationDSLPackage;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Verify;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Verify</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.imta.yperiquoi.browserautomation.browserAutomationDSL.impl.VerifyImpl#getTextToVerify <em>Text To Verify</em>}</li>
 *   <li>{@link fr.imta.yperiquoi.browserautomation.browserAutomationDSL.impl.VerifyImpl#getLinkToVerify <em>Link To Verify</em>}</li>
 *   <li>{@link fr.imta.yperiquoi.browserautomation.browserAutomationDSL.impl.VerifyImpl#getVariable <em>Variable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VerifyImpl extends CommandImpl implements Verify
{
  /**
   * The default value of the '{@link #getTextToVerify() <em>Text To Verify</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTextToVerify()
   * @generated
   * @ordered
   */
  protected static final String TEXT_TO_VERIFY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTextToVerify() <em>Text To Verify</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTextToVerify()
   * @generated
   * @ordered
   */
  protected String textToVerify = TEXT_TO_VERIFY_EDEFAULT;

  /**
   * The default value of the '{@link #getLinkToVerify() <em>Link To Verify</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkToVerify()
   * @generated
   * @ordered
   */
  protected static final String LINK_TO_VERIFY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLinkToVerify() <em>Link To Verify</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkToVerify()
   * @generated
   * @ordered
   */
  protected String linkToVerify = LINK_TO_VERIFY_EDEFAULT;

  /**
   * The default value of the '{@link #getVariable() <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected static final String VARIABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected String variable = VARIABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VerifyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BrowserAutomationDSLPackage.Literals.VERIFY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTextToVerify()
  {
    return textToVerify;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTextToVerify(String newTextToVerify)
  {
    String oldTextToVerify = textToVerify;
    textToVerify = newTextToVerify;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationDSLPackage.VERIFY__TEXT_TO_VERIFY, oldTextToVerify, textToVerify));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLinkToVerify()
  {
    return linkToVerify;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinkToVerify(String newLinkToVerify)
  {
    String oldLinkToVerify = linkToVerify;
    linkToVerify = newLinkToVerify;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationDSLPackage.VERIFY__LINK_TO_VERIFY, oldLinkToVerify, linkToVerify));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariable(String newVariable)
  {
    String oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationDSLPackage.VERIFY__VARIABLE, oldVariable, variable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BrowserAutomationDSLPackage.VERIFY__TEXT_TO_VERIFY:
        return getTextToVerify();
      case BrowserAutomationDSLPackage.VERIFY__LINK_TO_VERIFY:
        return getLinkToVerify();
      case BrowserAutomationDSLPackage.VERIFY__VARIABLE:
        return getVariable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BrowserAutomationDSLPackage.VERIFY__TEXT_TO_VERIFY:
        setTextToVerify((String)newValue);
        return;
      case BrowserAutomationDSLPackage.VERIFY__LINK_TO_VERIFY:
        setLinkToVerify((String)newValue);
        return;
      case BrowserAutomationDSLPackage.VERIFY__VARIABLE:
        setVariable((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BrowserAutomationDSLPackage.VERIFY__TEXT_TO_VERIFY:
        setTextToVerify(TEXT_TO_VERIFY_EDEFAULT);
        return;
      case BrowserAutomationDSLPackage.VERIFY__LINK_TO_VERIFY:
        setLinkToVerify(LINK_TO_VERIFY_EDEFAULT);
        return;
      case BrowserAutomationDSLPackage.VERIFY__VARIABLE:
        setVariable(VARIABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BrowserAutomationDSLPackage.VERIFY__TEXT_TO_VERIFY:
        return TEXT_TO_VERIFY_EDEFAULT == null ? textToVerify != null : !TEXT_TO_VERIFY_EDEFAULT.equals(textToVerify);
      case BrowserAutomationDSLPackage.VERIFY__LINK_TO_VERIFY:
        return LINK_TO_VERIFY_EDEFAULT == null ? linkToVerify != null : !LINK_TO_VERIFY_EDEFAULT.equals(linkToVerify);
      case BrowserAutomationDSLPackage.VERIFY__VARIABLE:
        return VARIABLE_EDEFAULT == null ? variable != null : !VARIABLE_EDEFAULT.equals(variable);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (textToVerify: ");
    result.append(textToVerify);
    result.append(", linkToVerify: ");
    result.append(linkToVerify);
    result.append(", variable: ");
    result.append(variable);
    result.append(')');
    return result.toString();
  }

} //VerifyImpl
