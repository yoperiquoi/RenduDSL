/**
 * generated by Xtext 2.32.0
 */
package fr.imta.yperiquoi.browserautomation.generator;

import com.google.common.base.Objects;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Click;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Combobox;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Command;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Fill;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.GoTo;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Model;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.OpenBrowser;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Read;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Select;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Uncheck;
import fr.imta.yperiquoi.browserautomation.browserAutomationDSL.Verify;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class BrowserAutomationDSLGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    final Model model = ((Model) _get);
    if ((model != null)) {
      final String inputFileName = resource.getURI().lastSegment().toString();
      String name = inputFileName.replaceFirst(".badsl", ".java");
      String className = resource.getURI().lastSegment().toString().replaceFirst(".badsl", "");
      char _upperCase = Character.toUpperCase(className.charAt(0));
      String _substring = className.substring(1);
      String _plus = (Character.valueOf(_upperCase) + _substring);
      className = _plus;
      char _upperCase_1 = Character.toUpperCase(name.charAt(0));
      String _substring_1 = name.substring(1);
      String _plus_1 = (Character.valueOf(_upperCase_1) + _substring_1);
      name = _plus_1;
      final String seleniumCode = this.generateSeleniumCode(model, className);
      fsa.generateFile(name, seleniumCode);
    }
  }

  public String generateSeleniumCode(final Model model, final String className) {
    String code = "";
    String _code = code;
    code = (_code + "import org.openqa.selenium.By;\n");
    String _code_1 = code;
    code = (_code_1 + "import org.openqa.selenium.WebDriver;\n");
    String _code_2 = code;
    code = (_code_2 + "import org.openqa.selenium.WebElement;\n");
    String _code_3 = code;
    code = (_code_3 + "import org.openqa.selenium.chrome.ChromeDriver;\n");
    String _code_4 = code;
    code = (_code_4 + "import org.openqa.selenium.JavascriptExecutor;\n");
    String _code_5 = code;
    code = (_code_5 + "import org.openqa.selenium.interactions.Actions;\n");
    String _code_6 = code;
    code = (_code_6 + "import dev.failsafe.internal.util.Assert;\n");
    String _code_7 = code;
    code = (_code_7 + "import java.util.*;\n\n");
    String _code_8 = code;
    code = (_code_8 + (("public class " + className) + " {\n"));
    String _code_9 = code;
    code = (_code_9 + "    public static void main(String[] args) {\n");
    EList<Command> _commands = model.getCommands();
    for (final Command command : _commands) {
      if ((command instanceof OpenBrowser)) {
        String _code_10 = code;
        code = (_code_10 + "        WebDriver driver = new ChromeDriver();\n\n");
      } else {
        if ((command instanceof GoTo)) {
          String _code_11 = code;
          code = (_code_11 + "        // Go to URL\n");
          String _code_12 = code;
          String _url = ((GoTo)command).getUrl();
          String _plus = ("        driver.get(\"" + _url);
          String _plus_1 = (_plus + "\");\n\n");
          code = (_code_12 + _plus_1);
        } else {
          if ((command instanceof Click)) {
            String _linkText = ((Click)command).getLinkText();
            boolean _tripleNotEquals = (_linkText != null);
            if (_tripleNotEquals) {
              String _code_13 = code;
              code = (_code_13 + "        // Click on a link (use get because it does not work for new)\n");
              String _code_14 = code;
              String _linkText_1 = ((Click)command).getLinkText();
              String _plus_2 = ("        WebElement e = driver.findElement(By.xpath(\"//a[text()=\'" + _linkText_1);
              String _plus_3 = (_plus_2 + "\']\"));\n");
              code = (_code_14 + _plus_3);
              String _code_15 = code;
              code = (_code_15 + "        driver.get(e.getAttribute(\"href\"));\n");
            } else {
              String _buttonText = ((Click)command).getButtonText();
              boolean _tripleNotEquals_1 = (_buttonText != null);
              if (_tripleNotEquals_1) {
                String _code_16 = code;
                code = (_code_16 + "        // Click on a button\n");
                String _code_17 = code;
                String _buttonText_1 = ((Click)command).getButtonText();
                String _plus_4 = ("        driver.findElement(By.xpath(\"//input[@value=\'" + _buttonText_1);
                String _plus_5 = (_plus_4 + "\']\")).click();\n\n");
                code = (_code_17 + _plus_5);
              } else {
                String _alt = ((Click)command).getAlt();
                boolean _tripleNotEquals_2 = (_alt != null);
                if (_tripleNotEquals_2) {
                  String _code_18 = code;
                  code = (_code_18 + "        // Click on the image containing alt\n");
                  String _code_19 = code;
                  String _alt_1 = ((Click)command).getAlt();
                  String _plus_6 = ("        driver.findElement(By.xpath(\"//img[@alt=\'" + _alt_1);
                  String _plus_7 = (_plus_6 + "\']\")).click();\n\n");
                  code = (_code_19 + _plus_7);
                } else {
                  String _variable = ((Click)command).getVariable();
                  boolean _tripleNotEquals_3 = (_variable != null);
                  if (_tripleNotEquals_3) {
                    String _variable_1 = ((Click)command).getVariable();
                    boolean _equals = Objects.equal(_variable_1, "url");
                    if (_equals) {
                      String _code_20 = code;
                      String _variable_2 = ((Click)command).getVariable();
                      String _plus_8 = ("        driver.get(" + _variable_2);
                      String _plus_9 = (_plus_8 + ");\n\n");
                      code = (_code_20 + _plus_9);
                    }
                  }
                }
              }
            }
          } else {
            if ((command instanceof Fill)) {
              String _code_21 = code;
              code = (_code_21 + "        // Add text to the search field (first input)\n");
              String _code_22 = code;
              String _fieldName = ((Fill)command).getFieldName();
              String _plus_10 = ("        WebElement labelElement = driver.findElements(By.xpath(\"//label[text()=\'" + _fieldName);
              String _plus_11 = (_plus_10 + "\']\")).get(1);\n");
              code = (_code_22 + _plus_11);
              String _code_23 = code;
              code = (_code_23 + "\t\t WebElement inputElement = driver.findElement(By.id(labelElement.getAttribute(\"for\")));\n");
              String _textToFill = ((Fill)command).getTextToFill();
              boolean _tripleNotEquals_4 = (_textToFill != null);
              if (_tripleNotEquals_4) {
                String _code_24 = code;
                String _textToFill_1 = ((Fill)command).getTextToFill();
                String _plus_12 = ("        inputElement.sendKeys(\"" + _textToFill_1);
                String _plus_13 = (_plus_12 + "\");\n\n");
                code = (_code_24 + _plus_13);
              } else {
                String _variable_3 = ((Fill)command).getVariable();
                boolean _tripleNotEquals_5 = (_variable_3 != null);
                if (_tripleNotEquals_5) {
                  String _code_25 = code;
                  String _variable_4 = ((Fill)command).getVariable();
                  String _plus_14 = ("        inputElement.sendKeys(" + _variable_4);
                  String _plus_15 = (_plus_14 + ");\n\n");
                  code = (_code_25 + _plus_15);
                }
              }
            } else {
              if ((command instanceof Select)) {
                String _code_26 = code;
                code = (_code_26 + "        // Check checkboxes by their values\n");
                String _code_27 = code;
                code = (_code_27 + "        List<String> valuesToCheck = Arrays.asList(");
                EList<String> _values = ((Select)command).getValues();
                for (final String value : _values) {
                  String _code_28 = code;
                  code = (_code_28 + (("\"" + value) + "\", "));
                }
                int _length = code.length();
                int _minus = (_length - 2);
                code = code.substring(0, _minus);
                String _code_29 = code;
                code = (_code_29 + ");\n");
                String _code_30 = code;
                code = (_code_30 + "        JavascriptExecutor js = (JavascriptExecutor) driver;\n");
                String _code_31 = code;
                code = (_code_31 + "        js.executeScript(\"window.scrollTo(0, 340);\");\n");
                String _code_32 = code;
                code = (_code_32 + "        for(String value: valuesToCheck) {\n");
                String _code_33 = code;
                code = (_code_33 + "            WebElement labelElement = driver.findElement(By.xpath(\"//label[text()=\'\" + value + \"\']\"));\n");
                String _code_34 = code;
                code = (_code_34 + "            WebElement inputElement = driver.findElement(By.id(labelElement.getAttribute(\"for\")));\n");
                String _code_35 = code;
                code = (_code_35 + "            inputElement.click();\n");
                String _code_36 = code;
                code = (_code_36 + "        }\n");
              } else {
                if ((command instanceof Verify)) {
                  String _textToVerify = ((Verify)command).getTextToVerify();
                  boolean _tripleNotEquals_6 = (_textToVerify != null);
                  if (_tripleNotEquals_6) {
                    String _code_37 = code;
                    code = (_code_37 + "        // Verify that the page contains text\n");
                    String _code_38 = code;
                    String _textToVerify_1 = ((Verify)command).getTextToVerify();
                    String _plus_16 = ("        assert driver.getPageSource().contains(\"" + _textToVerify_1);
                    String _plus_17 = (_plus_16 + "\");\n\n");
                    code = (_code_38 + _plus_17);
                  } else {
                    String _linkToVerify = ((Verify)command).getLinkToVerify();
                    boolean _tripleNotEquals_7 = (_linkToVerify != null);
                    if (_tripleNotEquals_7) {
                      String _code_39 = code;
                      code = (_code_39 + "        // Verify that the page contains link\n");
                      String _code_40 = code;
                      String _linkToVerify_1 = ((Verify)command).getLinkToVerify();
                      String _plus_18 = ("        assert driver.findElements(By.partialLinkText(\"" + _linkToVerify_1);
                      String _plus_19 = (_plus_18 + "\")).size() > 0;\n\n");
                      code = (_code_40 + _plus_19);
                    } else {
                      String _variable_5 = ((Verify)command).getVariable();
                      boolean _tripleNotEquals_8 = (_variable_5 != null);
                      if (_tripleNotEquals_8) {
                        String _variable_6 = ((Verify)command).getVariable();
                        boolean _equals_1 = Objects.equal(_variable_6, "url");
                        if (_equals_1) {
                          String _code_41 = code;
                          code = (_code_41 + "        // Verify that the page countains the url\n");
                          String _code_42 = code;
                          code = (_code_42 + "        WebElement foundLink = driver.findElement(By.xpath(\"//a[@href=\\\"\"+ url +\"\\\"]\"));\n");
                          String _code_43 = code;
                          code = (_code_43 + "        Assert.notNull(link, \"Link is not found.\");\n");
                        }
                        String _variable_7 = ((Verify)command).getVariable();
                        boolean _equals_2 = Objects.equal(_variable_7, "title");
                        if (_equals_2) {
                          String _code_44 = code;
                          code = (_code_44 + "        // Verify that the page countains the title\n");
                          String _code_45 = code;
                          code = (_code_45 + "\t\t assert driver.getPageSource().contains(title);\n");
                        }
                      }
                    }
                  }
                } else {
                  if ((command instanceof Read)) {
                    String _code_46 = code;
                    code = (_code_46 + "\t\t //Get the link to a news\n");
                    String _code_47 = code;
                    String _linkText_2 = ((Read)command).getLinkText();
                    String _plus_20 = ("        WebElement link = driver.findElements(By.xpath(\"//a[starts-with(@href, \'" + _linkText_2);
                    String _plus_21 = (_plus_20 + "\')]\")).get(");
                    int _number = ((Read)command).getNumber();
                    String _plus_22 = (_plus_21 + Integer.valueOf(_number));
                    String _plus_23 = (_plus_22 + ");\n");
                    code = (_code_47 + _plus_23);
                    boolean _contains = ((Read)command).getElements().contains("title");
                    if (_contains) {
                      String _code_48 = code;
                      code = (_code_48 + "        String title = link.getText();\n");
                    }
                    boolean _contains_1 = ((Read)command).getElements().contains("url");
                    if (_contains_1) {
                      String _code_49 = code;
                      code = (_code_49 + "        String url = link.getAttribute(\"href\");\n");
                    }
                    boolean _contains_2 = ((Read)command).getElements().contains("text link");
                    if (_contains_2) {
                      String _code_50 = code;
                      code = (_code_50 + "        String title = link.getText();\n");
                    }
                  } else {
                    if ((command instanceof Uncheck)) {
                      String _code_51 = code;
                      code = (_code_51 + "        // Uncheck all checkboxes\n");
                      String _code_52 = code;
                      code = (_code_52 + "        List<WebElement> checkboxes = driver.findElements(By.xpath(\"//input[@type=\'checkbox\']\"));\n");
                      String _code_53 = code;
                      code = (_code_53 + "        for (WebElement checkbox : checkboxes) {\n");
                      String _code_54 = code;
                      code = (_code_54 + "            if (checkbox.isSelected()) {\n");
                      String _code_55 = code;
                      code = (_code_55 + "                checkbox.click();\n");
                      String _code_56 = code;
                      code = (_code_56 + "            }\n");
                      String _code_57 = code;
                      code = (_code_57 + "        }\n\n");
                    } else {
                      if ((command instanceof Combobox)) {
                        String _code_58 = code;
                        code = (_code_58 + "        // Get the label from the combox\n");
                        String _code_59 = code;
                        String _label = ((Combobox)command).getLabel();
                        String _plus_24 = ("        WebElement e = driver.findElement(By.xpath(\"//label[text()=\'" + _label);
                        String _plus_25 = (_plus_24 + "\']\"));\n");
                        code = (_code_59 + _plus_25);
                        String _code_60 = code;
                        code = (_code_60 + "        // Open the combobox\n");
                        String _code_61 = code;
                        code = (_code_61 + "        new Actions(driver).moveToLocation(e.getLocation().x, e.getLocation().getY() + 50).click().perform();\n");
                        String _code_62 = code;
                        code = (_code_62 + "        // Click on the option\n");
                        String _code_63 = code;
                        String _option = ((Combobox)command).getOption();
                        String _plus_26 = ("        driver.findElement(By.xpath(\"//li[text()=\'" + _option);
                        String _plus_27 = (_plus_26 + "\']\")).click();\n");
                        code = (_code_63 + _plus_27);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    String _code_64 = code;
    code = (_code_64 + "        driver.quit();\n");
    String _code_65 = code;
    code = (_code_65 + "    }\n");
    String _code_66 = code;
    code = (_code_66 + "}\n");
    return code.toString();
  }
}
